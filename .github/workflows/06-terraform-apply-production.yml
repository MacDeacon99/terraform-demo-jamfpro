name: "06 - terraform apply: production"

on:
  pull_request:
    types: [closed]
    branches: [production]

env:
  TF_CLOUD_ORGANIZATION: "MacDeacon99"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "terraform-jamfpro-production"
  CONFIG_DIRECTORY: "workload/terraform/jamfpro"
  PIPELINE_DEBUG: "true"

permissions:
  contents: read
  id-token: write

jobs:
  terraform-apply:
    name: "Terraform Apply to Production"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.1
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.1
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.1
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

  # send-notification:
  #   needs: [terraform-apply]
  #   if: always()
  #   uses: ./.github/workflows/send-notification.yml
  #   with:
  #     environment: "Production Apply"
  #     result: ${{ needs.terraform-apply.result == 'success' && 'success' || 'failure' }}
  #     notification_channel: msteams  # or 'slack'
  #   secrets: inherit